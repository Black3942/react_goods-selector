{"version":3,"sources":["App.tsx","index.tsx"],"names":["goods","App","state","selectedGood","switcher","good","setState","this","className","classNames","type","onClick","map","Component","ReactDOM","render","document","getElementById"],"mappings":"2PAKaA,EAAQ,CACnB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAOWC,EAAb,4MACEC,MAAyB,CACvBC,aAAc,OAFlB,EAKEC,SAAW,SAACC,GACNA,IAAS,EAAKH,MAAMC,aACtB,EAAKG,SAAS,CAAEH,aAAc,OAE9B,EAAKG,SAAS,CAAEH,aAAcE,KATpC,4CAaE,WAAU,IAAD,OACCF,EAAiBI,KAAKL,MAAtBC,aAER,OACE,uBAAMK,UAAU,oBAAhB,UACE,qBACEA,UAAWC,IACT,QACA,CAAE,gCAAiCN,IAHvC,UAMGA,EAAY,UAAMA,EAAN,gBAAmC,oBAE/CA,GACC,mCAEE,wBACE,UAAQ,cACRO,KAAK,SACLF,UAAU,cACVG,QAAS,kBAAM,EAAKP,SAASD,WAMrC,uBAAOK,UAAU,QAAjB,SACE,gCACGR,EAAMY,KAAI,SAAAP,GAAI,OACb,qBACE,UAAQ,OAERG,UAAWC,IACT,CAAE,+BAAgCN,IAAiBE,IAJvD,UAOE,6BACE,wBACE,UAASF,IAAiBE,EACtB,eACA,YACJK,KAAK,SACLF,UAAWC,IACT,SACA,CAAE,UAAWN,IAAiBE,IAEhCM,QAAS,kBAAM,EAAKP,SAASC,IAT/B,SAWGF,IAAiBE,EAAO,IAAM,QAInC,oBAAI,UAAQ,YAAYG,UAAU,eAAlC,SACGH,MAtBEA,iBA5CrB,GAAyBQ,aCnBzBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.211d4ed8.chunk.js","sourcesContent":["import { Component } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goods = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  selectedGood: string | null;\n};\n\nexport class App extends Component {\n  state: Readonly<State> = {\n    selectedGood: 'Jam',\n  };\n\n  switcher = (good: string) => {\n    if (good === this.state.selectedGood) {\n      this.setState({ selectedGood: null });\n    } else {\n      this.setState({ selectedGood: good });\n    }\n  };\n\n  render() {\n    const { selectedGood } = this.state;\n\n    return (\n      <main className=\"section container\">\n        <h1\n          className={classNames(\n            'title',\n            { 'is-flex is-align-items-center': selectedGood },\n          )}\n        >\n          {selectedGood ? `${selectedGood} is selected` : 'No goods selected'}\n\n          {selectedGood && (\n            <>\n              {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n              <button\n                data-cy=\"ClearButton\"\n                type=\"button\"\n                className=\"delete ml-3\"\n                onClick={() => this.switcher(selectedGood)}\n              />\n            </>\n          )}\n        </h1>\n\n        <table className=\"table\">\n          <tbody>\n            {goods.map(good => (\n              <tr\n                data-cy=\"Good\"\n                key={good}\n                className={classNames(\n                  { 'has-background-success-light': selectedGood === good },\n                )}\n              >\n                <td>\n                  <button\n                    data-cy={selectedGood === good\n                      ? 'RemoveButton'\n                      : 'AddButton'}\n                    type=\"button\"\n                    className={classNames(\n                      'button',\n                      { 'is-info': selectedGood === good },\n                    )}\n                    onClick={() => this.switcher(good)}\n                  >\n                    {selectedGood === good ? '-' : '+'}\n                  </button>\n                </td>\n\n                <td data-cy=\"GoodTitle\" className=\"is-vcentered\">\n                  {good}\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </main>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}